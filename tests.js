// Generated by LiveScript 1.4.0
(function(){
  var Backbone, h, _, abstractMan, ubigraph, ubi;
  Backbone = require('backbone4000');
  h = require('helpers');
  _ = require('underscore');
  abstractMan = require('./index');
  ubigraph = require('ubigraph');
  ubi = function(test){
    var A, B, C;
    A = new abstractMan.DirectedGraphNode({
      name: 'A'
    });
    B = new abstractMan.DirectedGraphNode({
      name: 'B'
    });
    C = new abstractMan.DirectedGraphNode({
      name: 'C'
    });
    A.pushChild(B);
    B.pushChild(C);
    ubigraph.visualize(A, function(node){
      return node.getChildren();
    }, function(node){
      return node.name;
    });
    return test.done();
  };
  exports.stateMbasic = function(test){
    var Machine, statea, stated, machine;
    Machine = abstractMan.StateMachine.extend4000({
      name: 'test machine',
      start: 'state_a'
    });
    statea = Machine.defineState({
      name: 'state_a',
      children: ['state_b']
    });
    Machine.defineState({
      name: 'state_b',
      children: ['state_c']
    });
    Machine.defineState({
      name: 'state_c',
      children: ['state_a']
    });
    stated = statea.defineChild({
      name: 'state_d'
    });
    stated.addChild('state_a');
    machine = new Machine();
    machine.states.state_a.visit();
    machine.changeState('state_b');
    return test.done();
  };
  exports.stateMdefine = function(test){
    var Machine, machine;
    Machine = abstractMan.StateMachine.extend4000({
      name: 'test machine',
      start: 'state_a',
      states: {
        state_a: {
          child: 'state_b'
        },
        state_b: {}
      }
    });
    machine = new Machine();
    machine.states.state_a.visit();
    machine.states.state_a.changeState('state_b');
    return test.done();
  };
}).call(this);
